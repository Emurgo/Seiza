type Block {
  blockHash: String!
  epoch: Int!
  slot: Int!
  # TODO: bad naming, should be issuedAt
  timeIssued: Timestamp!
  transactionsCount: Int!
  transactions: [Transaction!]

  # TODO: bad naming, should be totalSent
  totalSend: AdaAmount!
  totalFees: AdaAmount!

  # TODO: bad naming, should be sizeInBytes
  size: Int!

  blockLeader: BootstrapEraStakePool!

  blockHeight: Int #TODO: get real number
  blockConfirmations: Int #TODO: get real number

  previousBlock: Block
  nextBlock: Block

}

type PagedBlocksResult {
  cursor: Int
  hasMore: Boolean!
  blocks: [Block]!
}

type Query {
  pagedBlocks(cursor: Int): PagedBlocksResult!
  pagedBlocksInEpoch(epochNumber: Int!, cursor: Int): PagedBlocksResult!
  block(blockHash: String!): Block
}
