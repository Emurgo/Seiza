#TODO: these are preliminary
type StakePoolSummary {
  performance: Float
  adaStaked: AdaAmount
  rewards: AdaAmount
  keysDelegating: Int
  fullness: Float
  margins: Float
  pledge: AdaAmount
  revenue: Float
}

type BootstrapEraStakePool {
  poolHash: ID!
  name: String
  description: String
  summary: StakePoolSummary
  createdAt: Timestamp!
  website: URL!
}

type PagedStakePoolsResult {
  cursor: String
  hasMore: Boolean!
  stakePools: [BootstrapEraStakePool]!
  totalCount: Int!
}

enum StakePoolSortByEnum {
  REVENUE
  PERFORMANCE
  FULLNESS
  PLEDGE
  MARGINS
  STAKE
}

input PerformanceInterval {
  from: Float!
  to: Float!
}

type Query {
  stakePoolList(epochNumber: Int): BootstrapEraStakePool!
  pagedStakePoolList(cursor: String, sortBy: StakePoolSortByEnum!, searchText: String, performance: PerformanceInterval, pageSize: Int): PagedStakePoolsResult!
  stakePool(poolHash: String!, epochNumber: Int): BootstrapEraStakePool,
  stakePools(poolHashes: [String!]!, epochNumber: Int): [BootstrapEraStakePool]
}
