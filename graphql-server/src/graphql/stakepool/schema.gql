#TODO: these are preliminary

type OwnerPledge {
  declared: AdaAmount
  actual: AdaAmount
}

type EstimatedReward {
  percentage: Float
  ada: AdaAmount
}

type EstimatedRewards {
  perYear: EstimatedReward
  perMonth: EstimatedReward
  perEpoch: EstimatedReward
}

#TODO: make sure that `stakersCount` does not include owners
type StakePoolSummary {
  performance: Float
  adaStaked: AdaAmount
  rewards: AdaAmount
  estimatedRewards: EstimatedRewards
  keysDelegating: Int
  cost: AdaAmount
  fullness: Float
  margins: Float!
  pledge: AdaAmount
  revenue: Float
  stakersCount: Int
  ownerPledge: OwnerPledge
  usersAdaStaked: AdaAmount
  averageUserStaking: AdaAmount
  profitabilityPosition: Int
}

type BootstrapEraStakePool {
  poolHash: ID!
  name: String
  description: String
  summary: StakePoolSummary
  createdAt: Timestamp!
  age: Int!
  website: URL!
}

type StakePool {
  poolHash: ID!
  name: String
  description: String
  summary: StakePoolSummary
  createdAt: Timestamp!
  age: Int!
  website: URL!
}

# TODO: Unify later, for now only used so we can test new "Staking list" section, without
# modifying current endpoints
type MockedStakePool {
  poolHash: ID!
  name: String
  description: String
  summary: StakePoolSummary
  createdAt: Timestamp!
  age: Int!
  website: URL!
}

type BoostrapEraPagedStakePoolsResult {
  cursor: String
  hasMore: Boolean!
  stakePools: [BootstrapEraStakePool]!
  totalCount: Int!
}

type PagedStakePoolsResult {
  cursor: String
  hasMore: Boolean!
  stakePools: [BootstrapEraStakePool]!
  totalCount: Int!
}

enum StakePoolSortByEnum {
  REVENUE
  PERFORMANCE
  FULLNESS
  PLEDGE
  MARGINS
  STAKE
}

input PerformanceInterval {
  from: Float!
  to: Float!
}

input StakePoolSearchOptions {
  sortBy: StakePoolSortByEnum!
  searchText: String
  performance: PerformanceInterval
  userAda: AdaAmount
}

type Query {
  stakePoolList(epochNumber: Int): StakePool!
  pagedStakePoolList(cursor: String, pageSize: Int, searchOptions: StakePoolSearchOptions!): PagedStakePoolsResult!
  stakePool(poolHash: String!, epochNumber: Int): StakePool,
  stakePools(poolHashes: [String!]!, epochNumber: Int): [StakePool],
  # TODO: Unify later, for now only used so we can test new "Staking list" section, without
  # modifying current endpoints
  mockedStakePools: [MockedStakePool!]!,
}
