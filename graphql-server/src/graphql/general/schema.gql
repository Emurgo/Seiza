type SlotInfo {
  supply: AdaAmount!
  txCount: Int!
  totalSent: AdaAmount!
  totalFees: AdaAmount!
  timeIssued: Timestamp!
}

type GeneralInfo {
  blocksCount: Int!
  txCount: Int!
  movements: AdaAmount
  totalFees: AdaAmount
  emptySlotsCount: Int
  addresses: AdaAmount
}

enum InfoPeriod {
  ALL_TIME
  LAST_24_HOURS
}

scalar Date

type Point {
  # This is an ugly hack for dates
  x: String
  y: Float
}

type Series {
  data: [Point!]!
}

enum SeriesXAxisGroupBy {
  EPOCH
  DAY
}

type AggregateInfo {
  txCount: Series!
  totalAdaTransferred: Series!
  totalUtxoCreated: Series!
}

input SeriesEpochInterval {
  from: Int
  to: Int
}

input SeriesDateInterval {
  from: Timestamp
  to: Timestamp
}

type Query {
  generalInfo(infoPeriod: InfoPeriod): GeneralInfo!
  epochInfo(epoch: Int!): GeneralInfo!
  slotInfo(epoch: Int!, slot: Int!): SlotInfo!
  aggregateInfo(groupBy: SeriesXAxisGroupBy!, epochInterval: SeriesEpochInterval, dateInterval: SeriesDateInterval): AggregateInfo!
}
